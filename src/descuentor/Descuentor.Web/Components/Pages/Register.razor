@page "/register"

@using Descuentor.Aplicacion.Dtos
@using Descuentor.Aplicacion.Interfaces

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@rendermode InteractiveServer

<div class="container">
    <h3>Registro</h3>
    
    <EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        
        <div class="form-group">
            <label>Email:</label>
            <InputText @bind-Value="registerModel.Email" class="form-control" />
            <ValidationMessage For="@(() => registerModel.Email)" />
        </div>
        
        <div class="form-group">
            <label>Contraseña:</label>
            <InputText type="password" @bind-Value="registerModel.Password" class="form-control" />
            <ValidationMessage For="@(() => registerModel.Password)" />
        </div>

        <div class="form-group">
            <label>Confirma contraseña:</label>
            <InputText type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control" />
            <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
        </div>
        
        <button type="submit" class="btn btn-primary">Registrar</button>
    </EditForm>
</div>

@code {
    private RegisterRequest registerModel = new();

    private async Task HandleRegistration()
    {
        try
        {
            Console.WriteLine("Comienza el registro");
            var result = await AuthService.Register(registerModel);
            if (result.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/login");
            }
        }
        catch (Exception ex)
        {
            // Manejar el error
        }
    }
}
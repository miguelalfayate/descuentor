@page "/productos/ver/{id:int}"
@using System.Net.Http.Headers
@using Descuentor.Aplicacion.Dtos
@using Descuentor.WebAssembly.Servicios
@using ApexCharts
@using Descuentor.Dominio.Entidades
@inject HttpClient Http
@inject TokenService TokenService
@inject NavigationManager Navigation

@if (producto == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <div class="container custom-container mt-4">
        <h3 class="text-center">@producto.Nombre</h3>
        <div class="text-center">
            <button class="btn btn-primary btn-sm" @onclick="EditarProducto">
                <i class="bi bi-pencil"></i>
            </button>
            <button class="btn btn-danger btn-sm" @onclick="EliminarProducto">
                <i class="bi bi-trash"></i>
            </button>
        </div>
        <div class="row">
            <div class="col-md-6 text-center" style="padding: 50px;">
                <a href="@producto.Url">
                    <img src="@producto.UrlImagen" class="img-fluid"/>
                </a>
            </div>
            <div class="col-md-6" style="padding: 50px;">
                <div class="custom-background mt-4" style="background-color: #f8f9fa; padding: 20px;">
                    <ApexChart TItem="HistorialPrecio"
                               Title="Historial de precios"
                               Options="options">
                        <ApexPointSeries TItem="HistorialPrecio"
                                         Items="producto!.HistorialPrecios"
                                         Name="Precio de venta"
                                         SeriesType="SeriesType.Line"
                                         XValue="e => e.FechaConsulta"
                                         YValue="e => e.Precio"/>
                    </ApexChart>
                </div>


                <div class="custom-background mt-4" style="background-color: #f8f9fa; padding: 20px;">
                    <table class="table table-borderless">
                        <tbody>
                        <tr>
                            <td><strong>Tienda:</strong></td>
                            <td>@producto.Tienda.Nombre</td>
                        </tr>
                        <tr>
                            <td><strong>Precio Inicial:</strong></td>
                            <td>@producto.PrecioInicial €</td>
                        </tr>
                        <tr>
                            <td><strong>Descripción:</strong></td>
                            <td>@producto.Descripcion</td>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a class="btn btn-info" href="@producto.Url" target="_blank">Ver en la Web</a>
                    <button class="btn btn-secondary" @onclick="Volver">Volver</button>
                </div>
            </div>

        </div>
    </div>
}

@* *@
    @* <div> *@
    @*     <h2><a href="@producto.Url">@producto.Nombre</a></h2> *@
    @*     <a href="@producto.Url"><img src="@producto.UrlImagen" style="width: 200px; height: 200px; object-fit: cover;" /></a> *@
    @*     <p><strong>Tienda:</strong> @producto.TiendaNombre</p> *@
    @*     <p><strong>Precio Inicial:</strong> @producto.PrecioInicial €</p> *@
    @*     <p><strong>Descripción:</strong> @producto.Descripcion</p> *@
    @* </div> *@
    @* <ApexChart TItem="HistorialPrecio" *@
    @*            Title="Historial de precios" *@
    @*            Options="options"> *@
    @* *@
    @*     <ApexPointSeries TItem="HistorialPrecio" *@
    @*                      Items="producto!.HistorialPrecios" *@
    @*                      Name="Precio de venta" *@
    @*                      SeriesType="SeriesType.Line" *@
    @*                      XValue="e => e.FechaConsulta" *@
    @*                      YValue="e=> e.Precio" *@
    @*                       *@
    @*                      /> *@
    @*      *@
    @* </ApexChart> *@


@code {
    [Parameter] public int id { get; set; }

    private ProductoHistorialPreciosDto? producto;
    private ApexChartOptions<HistorialPrecio> options;

    protected override async Task OnInitializedAsync()
    {
        options = new ApexChartOptions<HistorialPrecio>();
        options.Yaxis = new List<YAxis>();
        options.Yaxis.Add(new YAxis
            {
                Labels = new YAxisLabels
                {
                    Formatter = @"function (value) {
                    return Number(value).toLocaleString() + '€';}"
                }
            }
        );

        options.Xaxis = new XAxis
        {
            Labels = new XAxisLabels
            {
                Formatter = @"function (value) {
                    var date = new Date(value);
                    return date.toLocaleDateString('es-ES', { day: '2-digit', month: 'long' });}"
            }
        };

        await CargarProducto();
    }

    private async Task CargarProducto()
    {
        var accessToken = await TokenService.GetAccessTokenAsync();
        var request = new HttpRequestMessage(HttpMethod.Get, $"http://localhost:5095/api/productos/{id}");
        request.Headers.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);

        var response = await Http.SendAsync(request);
        
        if (response.IsSuccessStatusCode)
        {
            producto = await response.Content.ReadFromJsonAsync<ProductoHistorialPreciosDto>();
        }
    }

    private void EditarProducto()
    {
        // Lógica para editar el producto
    }

    private void EliminarProducto()
    {
        // Lógica para eliminar el producto
    }

    private void Volver()
    {
        Navigation.NavigateTo("/");
    }

}
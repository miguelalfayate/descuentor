@page "/register"

@using Descuentor.WebAssembly.Modelos.Responses
@using Descuentor.WebAssembly.Interfaces
@using Descuentor.WebAssembly.Modelos.Requests

@inject IAuthService AuthService
@inject NavigationManager NavigationManager

@layout AuthLayout

<img src="logo.png" alt="Logo" style="height: 40px; margin-bottom: 20px; display: block; margin-left: auto; margin-right: auto" />
<h3 class="text-center" style="font-family: serif;">Nuevo usuario</h3>
    
<EditForm Model="@registerModel" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
        
    <div class="mb-3">
        <label for="email" class="form-label">Email:</label>
        <InputText @bind-Value="registerModel.Email" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Email)" />
    </div>
        
    <div class="mb-3">
        <label for="password" class="form-label">Password:</label>
        <InputText type="password" @bind-Value="registerModel.Password" class="form-control" />
        <ValidationMessage For="@(() => registerModel.Password)" />
    </div>

    <div class="mb-3">
        <label for="password" class="form-label">Confirma contrase√±a:</label>
        <InputText type="password" @bind-Value="registerModel.ConfirmPassword" class="form-control"/>
        <ValidationMessage For="@(() => registerModel.ConfirmPassword)"/>
    </div>
        
    <button type="submit" class="btn btn-primary w-100" style="margin-top: 20px;">Registrar</button>
</EditForm>

@if (errorMessages.Any())
{
    <div class="alert alert-danger" style="margin-top: 20px;">
        <ul>
            @foreach (var error in errorMessages)
            {
                <li>@error</li>
            }
        </ul>
    </div>
}

@code {
    private RegisterRequest registerModel = new();
    private List<string> errorMessages = new();

    private async Task HandleRegistration()
    {
        try
        {
            Console.WriteLine("Comienza el registro");
            var result = await AuthService.Register(registerModel);
            if (result.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                var responseContent = await result.Content.ReadFromJsonAsync<List<ApiErrorDetailsResponse>>();
                Console.WriteLine("Respuesta" + responseContent);
                if (responseContent != null)
                {
                    errorMessages = responseContent.Select(e => e.Description).ToList();
                }
            }
        }
        catch (Exception ex)
        {
            // Manejar el error
        }
    }
}